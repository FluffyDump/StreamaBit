2024-11-06 01:48:20.533 | ERROR    | app.services.user_service:create_user:29 - Exception occured: 'NoneType' object has no attribute 'value'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000029C0B674860>
    └ <WorkerThread(AnyIO worker thread, started 20180)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000029C10EC7B00>
    └ <WorkerThread(AnyIO worker thread, started 20180)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x0000029C10E753A0>, db=<sqlalchemy.orm.session.Session object at 0x0000029C10EB88...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000029C10EB89C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 36, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First23', email='firstUser23@gmail.com', password='Password1234$', role=None)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000029C10EB8850>
           │             └ <function create_user at 0x0000029C0FB2D9E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 16, in create_user
    user_validator.validate_role(user.role.value)
    │              │             │    └ None
    │              │             └ UserCreate(username='First23', email='firstUser23@gmail.com', password='Password1234$', role=None)
    │              └ <function validate_role at 0x0000029C0FB2E3E0>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

AttributeError: 'NoneType' object has no attribute 'value'
2024-11-06 01:50:58.090 | ERROR    | app.services.user_service:create_user:30 - Exception occured: 'NoneType' object has no attribute 'value'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000002C9B1834860>
    └ <WorkerThread(AnyIO worker thread, started 26164)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002C9B707BB00>
    └ <WorkerThread(AnyIO worker thread, started 26164)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002C9B70253A0>, db=<sqlalchemy.orm.session.Session object at 0x000002C9B7063A...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002C9B7021780>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 36, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First23', email='firstUser23@gmail.com', password='Password1234$', role=None)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002C9B7063A10>
           │             └ <function create_user at 0x000002C9B5CDD9E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 16, in create_user
    print(user.role.value)
          │    └ None
          └ UserCreate(username='First23', email='firstUser23@gmail.com', password='Password1234$', role=None)

AttributeError: 'NoneType' object has no attribute 'value'
2024-11-06 02:05:18.456 | ERROR    | app.services.user_service:create_user:31 - Exception occured: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000189653A4860>
    └ <WorkerThread(AnyIO worker thread, started 23608)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001896AB67C40>
    └ <WorkerThread(AnyIO worker thread, started 23608)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000001896AB15440>, db=<sqlalchemy.orm.session.Session object at 0x000001896AB6F1...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001896AB6DB00>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First24', email='firstUser24@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001896AB6F110>
           │             └ <function create_user at 0x00000189697CDA80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 25, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 02:05:54.678 | ERROR    | app.services.user_service:create_user:31 - Exception occured: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000002B6909D4860>
    └ <WorkerThread(AnyIO worker thread, started 28572)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002B696217BA0>
    └ <WorkerThread(AnyIO worker thread, started 28572)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002B6961C53A0>, db=<sqlalchemy.orm.session.Session object at 0x000002B6962025...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002B696269440>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First24', email='firstUser24@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002B696202550>
           │             └ <function create_user at 0x000002B694E7D9E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 25, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 02:06:49.787 | ERROR    | app.services.user_service:create_user:31 - Exception occured: 411: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000281AEBF4860>
    └ <WorkerThread(AnyIO worker thread, started 21820)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000281B43C7BA0>
    └ <WorkerThread(AnyIO worker thread, started 21820)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x00000281B43753A0>, db=<sqlalchemy.orm.session.Session object at 0x00000281B30007...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000281B43A25C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First24', email='firstUser24@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000281B3000750>
           │             └ <function create_user at 0x00000281B302D940>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 25, in create_user
    raise HTTPException(status_code=411, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 411: Username or email already in use
2024-11-06 02:08:57.352 | ERROR    | app.services.user_service:create_user:31 - Exception occured: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000263AB574860>
    └ <WorkerThread(AnyIO worker thread, started 9816)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000263B0DB7BA0>
    └ <WorkerThread(AnyIO worker thread, started 9816)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x00000263B0D653A0>, db=<sqlalchemy.orm.session.Session object at 0x00000263B0DA3A...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000263B0DA8CC0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First24', email='firstUser24@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000263B0DA3A10>
           │             └ <function create_user at 0x00000263AFA1D940>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 25, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 02:10:21.220 | ERROR    | app.services.user_service:create_user:31 - Exception occured: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001CF24684860>
    └ <WorkerThread(AnyIO worker thread, started 4556)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001CF29ED7BA0>
    └ <WorkerThread(AnyIO worker thread, started 4556)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000001CF29E853A0>, db=<sqlalchemy.orm.session.Session object at 0x000001CF29EDB3...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001CF29E96C40>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First24', email='firstUser24@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001CF29EDB310>
           │             └ <function create_user at 0x000001CF28B3D940>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 25, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 02:56:31.804 | ERROR    | app.crud.user_crud:create:77 - Exception with username=First33, email=firstUser33@gmail.com, role:UserRole.registered_user: (psycopg2.errors.StringDataRightTruncation) value too long for type character varying(255)

[SQL: INSERT INTO "user" (username, email, password_hash, role) VALUES (%(username)s, %(email)s, %(password_hash)s, %(role)s) RETURNING "user".user_id, "user".created_at]
[parameters: {'username': 'First33', 'email': 'firstUser33@gmail.com', 'password_hash': 'Password1234$ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss', 'role': 'registered_user'}]
(Background on this error at: https://sqlalche.me/e/20/9h9h)
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002C6EAE8C400>
    │    └ <sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2 object at 0x000002C6EB254850>
    └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ {'username': 'First33', 'email': 'firstUser33@gmail.com', 'password_hash': 'Password1234$ssssssssssssssssssssssssssssssssssss...
    │      │       └ 'INSERT INTO "user" (username, email, password_hash, role) VALUES (%(username)s, %(email)s, %(password_hash)s, %(role)s) RETU...
    │      └ <method 'execute' of 'psycopg2.extensions.cursor' objects>
    └ <cursor object at 0x000002C6ECA5CC80; closed: -1>

psycopg2.errors.StringDataRightTruncation: value too long for type character varying(255)



The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000002C6E7104860>
    └ <WorkerThread(AnyIO worker thread, started 9532)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002C6EC5C7B00>
    └ <WorkerThread(AnyIO worker thread, started 9532)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002C6EC579300>, db=<sqlalchemy.orm.session.Session object at 0x000002C6EC5BB3...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002C6EB57BF00>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, user=user)
           │             │              │        └ UserCreate(username='First33', email='firstUser33@gmail.com', password='Password1234$ssssssssssssssssssssssssssssssssssssssss...
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002C6EC5BB310>
           │             └ <function create_user at 0x000002C6EB56D760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 33, in create_user
    user = user_crud.create(db=db, user=user)
           │         │         │        └ UserCreate(username='First33', email='firstUser33@gmail.com', password='Password1234$ssssssssssssssssssssssssssssssssssssssss...
           │         │         └ <sqlalchemy.orm.session.Session object at 0x000002C6EC5BB310>
           │         └ <function create at 0x000002C6EB56DE40>
           └ <module 'app.crud.user_crud' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\crud\\user_cru...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\crud\user_crud.py", line 68, in create
    db.commit()
    │  └ <function Session.commit at 0x000002C6EB151A80>
    └ <sqlalchemy.orm.session.Session object at 0x000002C6EC5BB310>

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2028, in commit
    trans.commit(_to_root=True)
    │     └ <function SessionTransaction.commit at 0x000002C6EB150B80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C6EC5964E0>
  File "<string>", line 2, in commit
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                │  │      │      └ {'_to_root': True}
                │  │      └ ()
                │  └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C6EC5964E0>
                └ <function SessionTransaction.commit at 0x000002C6EB1509A0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    │    └ <function SessionTransaction._prepare_impl at 0x000002C6EB150860>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C6EC5964E0>
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                │  │      │      └ {}
                │  │      └ ()
                │  └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C6EC5964E0>
                └ <function SessionTransaction._prepare_impl at 0x000002C6EB1507C0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    │    │       └ <function Session.flush at 0x000002C6EB1609A0>
    │    └ <sqlalchemy.orm.session.Session object at 0x000002C6EC5BB310>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C6EC5964E0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4352, in flush
    self._flush(objects)
    │    │      └ None
    │    └ <function Session._flush at 0x000002C6EB160B80>
    └ <sqlalchemy.orm.session.Session object at 0x000002C6EC5BB310>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4487, in _flush
    with util.safe_reraise():
         │    └ <class 'sqlalchemy.util.langhelpers.safe_reraise'>
         └ <module 'sqlalchemy.util' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
          │         │              └ <traceback object at 0x000002C6ECA6B380>
          │         └ <method 'with_traceback' of 'BaseException' objects>
          └ DataError('(psycopg2.errors.StringDataRightTruncation) value too long for type character varying(255)\n')
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4448, in _flush
    flush_context.execute()
    │             └ <function UOWTransaction.execute at 0x000002C6EB149440>
    └ <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000002C6ECA57AD0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    │   │       └ <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000002C6ECA57AD0>
    │   └ <function SaveUpdateAll.execute at 0x000002C6EB149F80>
    └ SaveUpdateAll(Mapper[User(user)])
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    │    │         │               └ <function save_obj at 0x000002C6EB0F5B20>
    │    │         └ <module 'sqlalchemy.orm.persistence' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\...
    │    └ <module 'sqlalchemy.util.preloaded' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\...
    └ <module 'sqlalchemy.util' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    └ <function _emit_insert_statements at 0x000002C6EB140220>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             │          └ <function Connection.execute at 0x000002C6EADC8400>
             └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.dml.Insert object at 0x000002C6ECA6AC50>>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x000002C6EADC8720>
           └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x000002C6EADC8900>
          └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x000002C6EADC89A0>
           └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x000002C6EADC8C20>
    └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ StringDataRightTruncation('value too long for type character varying(255)\n')
          │                    │              └ (<class 'psycopg2.errors.StringDataRightTruncation'>, StringDataRightTruncation('value too long for type character varying(25...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ DataError('(psycopg2.errors.StringDataRightTruncation) value too long for type character varying(255)\n')
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002C6EAE8C400>
    │    └ <sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2 object at 0x000002C6EB254850>
    └ <sqlalchemy.engine.base.Connection object at 0x000002C6ECA6A710>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ {'username': 'First33', 'email': 'firstUser33@gmail.com', 'password_hash': 'Password1234$ssssssssssssssssssssssssssssssssssss...
    │      │       └ 'INSERT INTO "user" (username, email, password_hash, role) VALUES (%(username)s, %(email)s, %(password_hash)s, %(role)s) RETU...
    │      └ <method 'execute' of 'psycopg2.extensions.cursor' objects>
    └ <cursor object at 0x000002C6ECA5CC80; closed: -1>

sqlalchemy.exc.DataError: (psycopg2.errors.StringDataRightTruncation) value too long for type character varying(255)

[SQL: INSERT INTO "user" (username, email, password_hash, role) VALUES (%(username)s, %(email)s, %(password_hash)s, %(role)s) RETURNING "user".user_id, "user".created_at]
[parameters: {'username': 'First33', 'email': 'firstUser33@gmail.com', 'password_hash': 'Password1234$ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss', 'role': 'registered_user'}]
(Background on this error at: https://sqlalche.me/e/20/9h9h)
2024-11-06 11:57:21.612 | ERROR    | app.crud.user_session_crud:create:27 - IntegrityError with user_id=54, user_ip=127.0.0.1: (psycopg2.errors.NotNullViolation) null value in column "session_id" of relation "user_session" violates not-null constraint
DETAIL:  Failing row contains (null, null, 127.0.0.1, 54).

[SQL: INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id, user_session.created_at]
[parameters: {'ip_address': '127.0.0.1', 'fk_user_id': 54}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002212C36C400>
    │    └ <sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2 object at 0x000002212C738890>
    └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ {'ip_address': '127.0.0.1', 'fk_user_id': 54}
    │      │       └ 'INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id,...
    │      └ <method 'execute' of 'psycopg2.extensions.cursor' objects>
    └ <cursor object at 0x000002212DF51460; closed: -1>

psycopg2.errors.NotNullViolation: null value in column "session_id" of relation "user_session" violates not-null constraint
DETAIL:  Failing row contains (null, null, 127.0.0.1, 54).



The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000022128664860>
    └ <WorkerThread(AnyIO worker thread, started 28340)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002212DDE3D80>
    └ <WorkerThread(AnyIO worker thread, started 28340)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002212DD95620>, db=<sqlalchemy.orm.session.Session object at 0x000002212DE468...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002212DF3F3C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First35', email='firstUser35@gmail.com', password='Password1234$', role=None)
           │             │              │           └ <starlette.requests.Request object at 0x000002212DF3EF10>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002212DE46890>
           │             └ <function create_user at 0x000002212CA4D760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 42, in create_user
    session_crud.create(db=db, user_id=user.user_id, user_ip=request.client.host)
    │            │         │           │    │                │       └ <property object at 0x000002212B2F67F0>
    │            │         │           │    │                └ <starlette.requests.Request object at 0x000002212DF3EF10>
    │            │         │           │    └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000002212C9076A0>
    │            │         │           └ <app.models.database.User object at 0x000002212DF37650>
    │            │         └ <sqlalchemy.orm.session.Session object at 0x000002212DE46890>
    │            └ <function create at 0x000002212CA4E020>
    └ <module 'app.crud.user_session_crud' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\crud\\...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\crud\user_session_crud.py", line 20, in create
    db.commit()
    │  └ <function Session.commit at 0x000002212C631A80>
    └ <sqlalchemy.orm.session.Session object at 0x000002212DE46890>

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2028, in commit
    trans.commit(_to_root=True)
    │     └ <function SessionTransaction.commit at 0x000002212C630B80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212CA6ACB0>
  File "<string>", line 2, in commit
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                │  │      │      └ {'_to_root': True}
                │  │      └ ()
                │  └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212CA6ACB0>
                └ <function SessionTransaction.commit at 0x000002212C6309A0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    │    └ <function SessionTransaction._prepare_impl at 0x000002212C630860>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212CA6ACB0>
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                │  │      │      └ {}
                │  │      └ ()
                │  └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212CA6ACB0>
                └ <function SessionTransaction._prepare_impl at 0x000002212C6307C0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    │    │       └ <function Session.flush at 0x000002212C6449A0>
    │    └ <sqlalchemy.orm.session.Session object at 0x000002212DE46890>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212CA6ACB0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4352, in flush
    self._flush(objects)
    │    │      └ None
    │    └ <function Session._flush at 0x000002212C644B80>
    └ <sqlalchemy.orm.session.Session object at 0x000002212DE46890>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4487, in _flush
    with util.safe_reraise():
         │    └ <class 'sqlalchemy.util.langhelpers.safe_reraise'>
         └ <module 'sqlalchemy.util' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
          │         │              └ <traceback object at 0x000002212DF5CD80>
          │         └ <method 'with_traceback' of 'BaseException' objects>
          └ IntegrityError('(psycopg2.errors.NotNullViolation) null value in column "session_id" of relation "user_session" violates not-...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4448, in _flush
    flush_context.execute()
    │             └ <function UOWTransaction.execute at 0x000002212C629440>
    └ <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000002212DF4F750>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    │   │       └ <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000002212DF4F750>
    │   └ <function SaveUpdateAll.execute at 0x000002212C629F80>
    └ SaveUpdateAll(Mapper[UserSession(user_session)])
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    │    │         │               └ <function save_obj at 0x000002212C5D5B20>
    │    │         └ <module 'sqlalchemy.orm.persistence' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\...
    │    └ <module 'sqlalchemy.util.preloaded' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\...
    └ <module 'sqlalchemy.util' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    └ <function _emit_insert_statements at 0x000002212C620220>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             │          └ <function Connection.execute at 0x000002212C2A8400>
             └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.dml.Insert object at 0x000002212DF4FA90>>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x000002212C2A8720>
           └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x000002212C2A8900>
          └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x000002212C2A89A0>
           └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x000002212C2A8C20>
    └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ NotNullViolation('null value in column "session_id" of relation "user_session" violates not-null constraint\nDETAIL:  Failing...
          │                    │              └ (<class 'psycopg2.errors.NotNullViolation'>, NotNullViolation('null value in column "session_id" of relation "user_session" v...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ IntegrityError('(psycopg2.errors.NotNullViolation) null value in column "session_id" of relation "user_session" violates not-...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002212C36C400>
    │    └ <sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2 object at 0x000002212C738890>
    └ <sqlalchemy.engine.base.Connection object at 0x000002212DF3C9D0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ {'ip_address': '127.0.0.1', 'fk_user_id': 54}
    │      │       └ 'INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id,...
    │      └ <method 'execute' of 'psycopg2.extensions.cursor' objects>
    └ <cursor object at 0x000002212DF51460; closed: -1>

sqlalchemy.exc.IntegrityError: (psycopg2.errors.NotNullViolation) null value in column "session_id" of relation "user_session" violates not-null constraint
DETAIL:  Failing row contains (null, null, 127.0.0.1, 54).

[SQL: INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id, user_session.created_at]
[parameters: {'ip_address': '127.0.0.1', 'fk_user_id': 54}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2024-11-06 12:00:56.404 | ERROR    | app.crud.user_session_crud:create:27 - IntegrityError with user_id=55, user_ip=127.0.0.1: (psycopg2.errors.NotNullViolation) null value in column "created_at" of relation "user_session" violates not-null constraint
DETAIL:  Failing row contains (1, null, 127.0.0.1, 55).

[SQL: INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id, user_session.created_at]
[parameters: {'ip_address': '127.0.0.1', 'fk_user_id': 55}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002212C36C400>
    │    └ <sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2 object at 0x000002212C738890>
    └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ {'ip_address': '127.0.0.1', 'fk_user_id': 55}
    │      │       └ 'INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id,...
    │      └ <method 'execute' of 'psycopg2.extensions.cursor' objects>
    └ <cursor object at 0x000002212DF53E60; closed: -1>

psycopg2.errors.NotNullViolation: null value in column "created_at" of relation "user_session" violates not-null constraint
DETAIL:  Failing row contains (1, null, 127.0.0.1, 55).



The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000022128664860>
    └ <WorkerThread(AnyIO worker thread, started 28340)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002212DDE3D80>
    └ <WorkerThread(AnyIO worker thread, started 28340)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002212DD95620>, db=<sqlalchemy.orm.session.Session object at 0x000002212DFDEA...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002212DF3E800>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First36', email='firstUser36@gmail.com', password='Password1234$', role=None)
           │             │              │           └ <starlette.requests.Request object at 0x000002212E16AB50>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002212DFDEA50>
           │             └ <function create_user at 0x000002212CA4D760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 42, in create_user
    session_crud.create(db=db, user_id=user.user_id, user_ip=request.client.host)
    │            │         │           │    │                │       └ <property object at 0x000002212B2F67F0>
    │            │         │           │    │                └ <starlette.requests.Request object at 0x000002212E16AB50>
    │            │         │           │    └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000002212C9076A0>
    │            │         │           └ <app.models.database.User object at 0x000002212DF4F3D0>
    │            │         └ <sqlalchemy.orm.session.Session object at 0x000002212DFDEA50>
    │            └ <function create at 0x000002212CA4E020>
    └ <module 'app.crud.user_session_crud' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\crud\\...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\crud\user_session_crud.py", line 20, in create
    db.commit()
    │  └ <function Session.commit at 0x000002212C631A80>
    └ <sqlalchemy.orm.session.Session object at 0x000002212DFDEA50>

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2028, in commit
    trans.commit(_to_root=True)
    │     └ <function SessionTransaction.commit at 0x000002212C630B80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212E0F8AF0>
  File "<string>", line 2, in commit
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                │  │      │      └ {'_to_root': True}
                │  │      └ ()
                │  └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212E0F8AF0>
                └ <function SessionTransaction.commit at 0x000002212C6309A0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1313, in commit
    self._prepare_impl()
    │    └ <function SessionTransaction._prepare_impl at 0x000002212C630860>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212E0F8AF0>
  File "<string>", line 2, in _prepare_impl
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\state_changes.py", line 139, in _go
    ret_value = fn(self, *arg, **kw)
                │  │      │      └ {}
                │  │      └ ()
                │  └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212E0F8AF0>
                └ <function SessionTransaction._prepare_impl at 0x000002212C6307C0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 1288, in _prepare_impl
    self.session.flush()
    │    │       └ <function Session.flush at 0x000002212C6449A0>
    │    └ <sqlalchemy.orm.session.Session object at 0x000002212DFDEA50>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002212E0F8AF0>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4352, in flush
    self._flush(objects)
    │    │      └ None
    │    └ <function Session._flush at 0x000002212C644B80>
    └ <sqlalchemy.orm.session.Session object at 0x000002212DFDEA50>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4487, in _flush
    with util.safe_reraise():
         │    └ <class 'sqlalchemy.util.langhelpers.safe_reraise'>
         └ <module 'sqlalchemy.util' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 146, in __exit__
    raise exc_value.with_traceback(exc_tb)
          │         │              └ <traceback object at 0x000002212E170F00>
          │         └ <method 'with_traceback' of 'BaseException' objects>
          └ IntegrityError('(psycopg2.errors.NotNullViolation) null value in column "created_at" of relation "user_session" violates not-...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 4448, in _flush
    flush_context.execute()
    │             └ <function UOWTransaction.execute at 0x000002212C629440>
    └ <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000002212E16BB10>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 466, in execute
    rec.execute(self)
    │   │       └ <sqlalchemy.orm.unitofwork.UOWTransaction object at 0x000002212E16BB10>
    │   └ <function SaveUpdateAll.execute at 0x000002212C629F80>
    └ SaveUpdateAll(Mapper[UserSession(user_session)])
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\unitofwork.py", line 642, in execute
    util.preloaded.orm_persistence.save_obj(
    │    │         │               └ <function save_obj at 0x000002212C5D5B20>
    │    │         └ <module 'sqlalchemy.orm.persistence' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\...
    │    └ <module 'sqlalchemy.util.preloaded' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\...
    └ <module 'sqlalchemy.util' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\sqlalchemy...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 93, in save_obj
    _emit_insert_statements(
    └ <function _emit_insert_statements at 0x000002212C620220>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\persistence.py", line 1233, in _emit_insert_statements
    result = connection.execute(
             │          └ <function Connection.execute at 0x000002212C2A8400>
             └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1418, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.dml.Insert object at 0x000002212E170A50>>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x000002212C2A8720>
           └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1640, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x000002212C2A8900>
          └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1846, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x000002212C2A89A0>
           └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1986, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x000002212C2A8C20>
    └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 2355, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ NotNullViolation('null value in column "created_at" of relation "user_session" violates not-null constraint\nDETAIL:  Failing...
          │                    │              └ (<class 'psycopg2.errors.NotNullViolation'>, NotNullViolation('null value in column "created_at" of relation "user_session" v...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ IntegrityError('(psycopg2.errors.NotNullViolation) null value in column "created_at" of relation "user_session" violates not-...
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\base.py", line 1967, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002212C36C400>
    │    └ <sqlalchemy.dialects.postgresql.psycopg2.PGDialect_psycopg2 object at 0x000002212C738890>
    └ <sqlalchemy.engine.base.Connection object at 0x000002212E16A110>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\engine\default.py", line 941, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ {'ip_address': '127.0.0.1', 'fk_user_id': 55}
    │      │       └ 'INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id,...
    │      └ <method 'execute' of 'psycopg2.extensions.cursor' objects>
    └ <cursor object at 0x000002212DF53E60; closed: -1>

sqlalchemy.exc.IntegrityError: (psycopg2.errors.NotNullViolation) null value in column "created_at" of relation "user_session" violates not-null constraint
DETAIL:  Failing row contains (1, null, 127.0.0.1, 55).

[SQL: INSERT INTO user_session (ip_address, fk_user_id) VALUES (%(ip_address)s, %(fk_user_id)s) RETURNING user_session.session_id, user_session.created_at]
[parameters: {'ip_address': '127.0.0.1', 'fk_user_id': 55}]
(Background on this error at: https://sqlalche.me/e/20/gkpj)
2024-11-06 12:34:11.457 | ERROR    | app.services.user_service:create_user:48 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: 409: Username or email already in use
2024-11-06 12:37:06.942 | ERROR    | app.crud.user_session_crud:create:22 - Session cannot be created - user_id or user_ip not provided: None
2024-11-06 12:39:24.226 | ERROR    | app.crud.user_session_crud:create:22 - Session cannot be created - user_id or user_ip not provided
2024-11-06 12:39:46.393 | ERROR    | app.crud.user_session_crud:create:22 - Session cannot be created - user_id or user_ip not provided
2024-11-06 12:43:12.302 | ERROR    | app.services.user_service:create_user:52 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000002B86A214860>
    └ <WorkerThread(AnyIO worker thread, started 25740)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002B86FA33EC0>
    └ <WorkerThread(AnyIO worker thread, started 25740)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002B86F9E5620>, db=<sqlalchemy.orm.session.Session object at 0x000002B86FA3B2...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002B86FA91A40>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First43', email='firstUser43@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000002B86FA3A490>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002B86FA3B290>
           │             └ <function create_user at 0x000002B86F66CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 34, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 12:51:56.304 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: ValidationException.__init__() got an unexpected keyword argument 'status_code'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000021033A74860>
    └ <WorkerThread(AnyIO worker thread, started 18660)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000210392F8040>
    └ <WorkerThread(AnyIO worker thread, started 18660)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x0000021039259760>, db=<sqlalchemy.orm.session.Session object at 0x00000210392A78...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000210392528C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First53', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x00000210392A69D0>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000210392A78D0>
           │             └ <function create_user at 0x0000021037F0CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 43, in create_user
    session_validator.validate_ip("gg")
    │                 └ <function validate_ip at 0x0000021037F0DA80>
    └ <module 'app.validators.user_session_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_session_validator.py", line 19, in validate_ip
    raise shared_validator.ValidationException(status_code=400, detail="Invalid IP address")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

TypeError: ValidationException.__init__() got an unexpected keyword argument 'status_code'
2024-11-06 12:54:15.978 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: 400: Invalid IP address
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001C130E54860>
    └ <WorkerThread(AnyIO worker thread, started 20420)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001C136673F60>
    └ <WorkerThread(AnyIO worker thread, started 20420)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000001C1366256C0>, db=<sqlalchemy.orm.session.Session object at 0x000001C1366771...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001C136621C80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First53', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000001C136676790>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001C136677110>
           │             └ <function create_user at 0x000001C1352DD760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 43, in create_user
    session_validator.validate_ip("gg")
    │                 └ <function validate_ip at 0x000001C1352DCB80>
    └ <module 'app.validators.user_session_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_session_validator.py", line 20, in validate_ip
    raise HTTPException(status_code=400, detail="Invalid IP address")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 400: Invalid IP address
2024-11-06 12:55:02.282 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: Possible malicious input detected
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000278398E4860>
    └ <WorkerThread(AnyIO worker thread, started 20072)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002783F133F60>
    └ <WorkerThread(AnyIO worker thread, started 20072)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002783F0E9760>, db=<sqlalchemy.orm.session.Session object at 0x000002783F0F3A...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002783F195FC0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000002783F1369D0>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002783F0F3A10>
           │             └ <function create_user at 0x000002783DD9CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 17, in create_user
    shared_validator.validate_sql_malicious_input(user.username, user.email, user.password)
    │                │                            │    │         │    │      │    └ 'Password1234$'
    │                │                            │    │         │    │      └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    │         │    └ 'firstUser53@gmail.com'
    │                │                            │    │         └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    └ 'SELECT'
    │                │                            └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                └ <function validate_sql_malicious_input at 0x000002783DD9E020>
    └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\shared_validator.py", line 58, in validate_sql_malicious_input
    raise ValidationException("Possible malicious input detected")
          └ <class 'app.validators.shared_validator.ValidationException'>

app.validators.shared_validator.ValidationException: Possible malicious input detected
2024-11-06 12:57:25.692 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: Possible malicious input detected
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000267F0A84860>
    └ <WorkerThread(AnyIO worker thread, started 6024)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000267F6248040>
    └ <WorkerThread(AnyIO worker thread, started 6024)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x00000267F61A9760>, db=<sqlalchemy.orm.session.Session object at 0x00000267F61FB2...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000267F61FB600>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x00000267F61FA790>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000267F61FB290>
           │             └ <function create_user at 0x00000267F4E5CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 17, in create_user
    shared_validator.validate_sql_malicious_input(user.username, user.email, user.password)
    │                │                            │    │         │    │      │    └ 'Password1234$'
    │                │                            │    │         │    │      └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    │         │    └ 'firstUser53@gmail.com'
    │                │                            │    │         └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    └ 'SELECT'
    │                │                            └ UserCreate(username='SELECT', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                └ <function validate_sql_malicious_input at 0x00000267F4E5DF80>
    └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\shared_validator.py", line 58, in validate_sql_malicious_input
    raise ValidationException("Possible malicious input detected")
          └ <class 'app.validators.shared_validator.ValidationException'>

app.validators.shared_validator.ValidationException: Possible malicious input detected
2024-11-06 12:57:28.413 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: validation_exception_handler() got an unexpected keyword argument 'detail'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000267F0A84860>
    └ <WorkerThread(AnyIO worker thread, started 6024)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000267F6248040>
    └ <WorkerThread(AnyIO worker thread, started 6024)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x00000267F61A9760>, db=<sqlalchemy.orm.session.Session object at 0x00000267F6255B...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000267F61FAA40>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First53', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x00000267F62C4510>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000267F6255BD0>
           │             └ <function create_user at 0x00000267F4E5CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 43, in create_user
    session_validator.validate_ip("neg")
    │                 └ <function validate_ip at 0x00000267F4E5DA80>
    └ <module 'app.validators.user_session_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_session_validator.py", line 19, in validate_ip
    raise shared_validator.validation_exception_handler(detail="Invalid IP address")
          │                └ <function validation_exception_handler at 0x00000267F4E5E020>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

TypeError: validation_exception_handler() got an unexpected keyword argument 'detail'
2024-11-06 12:57:50.141 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: validation_exception_handler() missing 1 required positional argument: 'exc'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000177F51B4860>
    └ <WorkerThread(AnyIO worker thread, started 19800)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000177FA973F60>
    └ <WorkerThread(AnyIO worker thread, started 19800)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x00000177FA9216C0>, db=<sqlalchemy.orm.session.Session object at 0x00000177F94B53...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000177FA97A740>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First53', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x00000177FA97A510>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000177F94B5350>
           │             └ <function create_user at 0x00000177F95DD760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 43, in create_user
    session_validator.validate_ip("neg")
    │                 └ <function validate_ip at 0x00000177F95DDA80>
    └ <module 'app.validators.user_session_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_session_validator.py", line 19, in validate_ip
    raise shared_validator.validation_exception_handler("Invalid IP address")
          │                └ <function validation_exception_handler at 0x00000177F95DDF80>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

TypeError: validation_exception_handler() missing 1 required positional argument: 'exc'
2024-11-06 12:58:14.004 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: Invalid IP address
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000026919344860>
    └ <WorkerThread(AnyIO worker thread, started 24076)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002691EB93F60>
    └ <WorkerThread(AnyIO worker thread, started 24076)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002691EB456C0>, db=<sqlalchemy.orm.session.Session object at 0x000002691EB510...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002691EBB7BC0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First53', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000002691EB94D10>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002691EB51010>
           │             └ <function create_user at 0x000002691D7FD760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 43, in create_user
    session_validator.validate_ip("neg")
    │                 └ <function validate_ip at 0x000002691D7FDA80>
    └ <module 'app.validators.user_session_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_session_validator.py", line 19, in validate_ip
    raise shared_validator.ValidationException("Invalid IP address")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Invalid IP address
2024-11-06 13:00:07.075 | ERROR    | app.services.user_service:create_user:50 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: Invalid IP address
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000026919344860>
    └ <WorkerThread(AnyIO worker thread, started 24076)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002691EB93F60>
    └ <WorkerThread(AnyIO worker thread, started 24076)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000002691EB456C0>, db=<sqlalchemy.orm.session.Session object at 0x000002691ECE21...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002691ED594C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First53', email='firstUser53@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000002691EBF5A50>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002691ECE2190>
           │             └ <function create_user at 0x000002691D7FD760>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 43, in create_user
    session_validator.validate_ip("neg")
    │                 └ <function validate_ip at 0x000002691D7FDA80>
    └ <module 'app.validators.user_session_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_session_validator.py", line 19, in validate_ip
    raise shared_validator.ValidationException("Invalid IP address")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Invalid IP address
2024-11-06 13:15:37.431 | ERROR    | app.services.user_service:create_user:51 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000018237874860>
    └ <WorkerThread(AnyIO worker thread, started 18476)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001823D05C180>
    └ <WorkerThread(AnyIO worker thread, started 18476)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000001823CFB9940>, db=<sqlalchemy.orm.session.Session object at 0x000001823D0076...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001823CFB2500>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First54', email='firstUser54@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000001823D006B10>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001823D007690>
           │             └ <function create_user at 0x000001823BC6CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 35, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 13:15:54.169 | ERROR    | app.services.user_service:create_user:51 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: Possible malicious input detected
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000018237874860>
    └ <WorkerThread(AnyIO worker thread, started 18476)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001823D05C180>
    └ <WorkerThread(AnyIO worker thread, started 18476)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000001823CFB9940>, db=<sqlalchemy.orm.session.Session object at 0x000001823D0665...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001823CFB1AC0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000001823D1B6B90>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001823D066590>
           │             └ <function create_user at 0x000001823BC6CB80>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 18, in create_user
    shared_validator.validate_sql_malicious_input(user.username, user.email, user.password)
    │                │                            │    │         │    │      │    └ 'Password1234$'
    │                │                            │    │         │    │      └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    │         │    └ 'firstUser55@gmail.com'
    │                │                            │    │         └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    └ 'First55 Select'
    │                │                            └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                └ <function validate_sql_malicious_input at 0x000001823BC6DF80>
    └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\shared_validator.py", line 58, in validate_sql_malicious_input
    raise ValidationException("Possible malicious input detected")
          └ <class 'app.validators.shared_validator.ValidationException'>

app.validators.shared_validator.ValidationException: Possible malicious input detected
2024-11-06 13:42:34.314 | ERROR    | app.services.user_service:create_user:49 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: module 'app.validators' has no attribute 'user_validator'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001CEAB234860>
    └ <WorkerThread(AnyIO worker thread, started 18568)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001CEB0A33A60>
    └ <WorkerThread(AnyIO worker thread, started 18568)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x000001CEB09E53A0>, db=<sqlalchemy.orm.session.Session object at 0x000001CEADA175...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001CEB09F2E80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First55Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x000001CEB0A34D10>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001CEADA17510>
           │             └ <function create_user at 0x000001CEAF6823E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 17, in create_user
    validators.user_validator.validate_username(user.username)
    │                                           │    └ 'First55Select'
    │                                           └ UserCreate(username='First55Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    └ <module 'app.validators' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\validators\\__init...

AttributeError: module 'app.validators' has no attribute 'user_validator'
2024-11-06 13:46:40.312 | ERROR    | app.services.user_service:create_user:49 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000014B350F4860>
    └ <WorkerThread(AnyIO worker thread, started 27804)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000014B3A9780E0>
    └ <WorkerThread(AnyIO worker thread, started 27804)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x0000014B3A8D19E0>, db=<sqlalchemy.orm.session.Session object at 0x0000014B3A926F...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000014B3A915700>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First55Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x0000014B3A926310>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000014B3A926F90>
           │             └ <function create_user at 0x0000014B395723E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 33, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 13:48:25.191 | ERROR    | app.services.user_service:create_user:49 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: Possible malicious input detected
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000014B350F4860>
    └ <WorkerThread(AnyIO worker thread, started 27804)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000014B3A9780E0>
    └ <WorkerThread(AnyIO worker thread, started 27804)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x0000014B3A8D19E0>, db=<sqlalchemy.orm.session.Session object at 0x0000014B3A8E2E...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000014B3A925080>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x0000014B3AAD08D0>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000014B3A8E2E90>
           │             └ <function create_user at 0x0000014B395723E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 16, in create_user
    shared_validator.validate_sql_malicious_input(user.username, user.email, user.password)
    │                │                            │    │         │    │      │    └ 'Password1234$'
    │                │                            │    │         │    │      └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    │         │    └ 'firstUser55@gmail.com'
    │                │                            │    │         └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                │                            │    └ 'First55 Select'
    │                │                            └ UserCreate(username='First55 Select', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
    │                └ <function validate_sql_malicious_input at 0x0000014B3958E2A0>
    └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\shared_validator.py", line 58, in validate_sql_malicious_input
    raise ValidationException("Possible malicious input detected")
          └ <class 'app.validators.shared_validator.ValidationException'>

app.validators.shared_validator.ValidationException: Possible malicious input detected
2024-11-06 13:48:33.569 | ERROR    | app.services.user_service:create_user:49 - 
USER ACCOUNT HAS NOT BEEN CREATED, EXCEPTION OCCURED: 409: Username or email already in use
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000014B350F4860>
    └ <WorkerThread(AnyIO worker thread, started 27804)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000014B3A9780E0>
    └ <WorkerThread(AnyIO worker thread, started 27804)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function create_user at 0x0000014B3A8D19E0>, db=<sqlalchemy.orm.session.Session object at 0x0000014B3AAD3A...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000014B3AADA580>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 37, in create_user
    return user_services.create_user(db=db, request=request, user=user)
           │             │              │           │             └ UserCreate(username='First55', email='firstUser55@gmail.com', password='Password1234$', role=<UserRole.admin: 'admin'>)
           │             │              │           └ <starlette.requests.Request object at 0x0000014B3AAD9250>
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000014B3AAD3A50>
           │             └ <function create_user at 0x0000014B395723E0>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 33, in create_user
    raise HTTPException(status_code=409, detail="Username or email already in use")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 409: Username or email already in use
2024-11-06 14:13:39.805 | ERROR    | app.services.user_service:get_user_account_data:68 - USER: First33s DATA CANNOT BE PARSED, EXCEPTION OCCURED: 404: User not found
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001A0D1994860>
    └ <WorkerThread(AnyIO worker thread, started 13472)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001A0D71D80E0>
    └ <WorkerThread(AnyIO worker thread, started 13472)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function read_user at 0x000001A0D7131E40>, db=<sqlalchemy.orm.session.Session object at 0x000001A0D7140090...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001A0D7187080>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 45, in read_user
    return user_services.get_user_account_data(db=db, username=username)
           │             │                        │            └ 'First33s'
           │             │                        └ <sqlalchemy.orm.session.Session object at 0x000001A0D7140090>
           │             └ <function get_user_account_data at 0x000001A0D5DEE660>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 63, in get_user_account_data
    raise HTTPException(status_code=404, detail="User not found")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 404: User not found
2024-11-06 14:46:26.067 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 'UserUpdatePassword' object has no attribute 'old_password'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001E38A564860>
    └ <WorkerThread(AnyIO worker thread, started 13144)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001E38FABC2C0>
    └ <WorkerThread(AnyIO worker thread, started 13144)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001E38EA3A2A0>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001E38FA3F5C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001E38FA61BD0>
           │             └ <function update_user at 0x000001E38EA0EC00>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 73, in update_user
    shared_validator.validate_sql_malicious_input(username, data.email, data.new_email, data.old_password, data.new_password)
    │                │                            │         │    │      │    │          │                  │    └ None
    │                │                            │         │    │      │    │          │                  └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │                │                            │         │    │      │    │          └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │                │                            │         │    │      │    └ 'firstUser18@gmail.com'
    │                │                            │         │    │      └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │                │                            │         │    └ 'firstUser19@gmail.com'
    │                │                            │         └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │                │                            └ 'First32'
    │                └ <function validate_sql_malicious_input at 0x000001E38EA0DBC0>
    └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

AttributeError: 'UserUpdatePassword' object has no attribute 'old_password'
2024-11-06 14:46:54.573 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Missing password
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000002A32FD34860>
    └ <WorkerThread(AnyIO worker thread, started 22148)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002A33527C2C0>
    └ <WorkerThread(AnyIO worker thread, started 22148)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000002A3351D6200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002A33520BC80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002A335227390>
           │             └ <function update_user at 0x000002A3341CEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 83, in update_user
    user_validator.validate_password(data.new_password)
    │              │                 │    └ None
    │              │                 └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │              └ <function validate_password at 0x000002A3341CE200>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_validator.py", line 66, in validate_password
    raise shared_validator.ValidationException("Missing password")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Missing password
2024-11-06 15:09:58.971 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Missing password
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001CF3C994860>
    └ <WorkerThread(AnyIO worker thread, started 23792)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001CF4222C2C0>
    └ <WorkerThread(AnyIO worker thread, started 23792)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001CF42182200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001CF42236B80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001CF421D3790>
           │             └ <function update_user at 0x000001CF40E3EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 83, in update_user
    user_validator.validate_password(data.new_password)
    │              │                 │    └ None
    │              │                 └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │              └ <function validate_password at 0x000001CF40E3E200>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_validator.py", line 66, in validate_password
    raise shared_validator.ValidationException("Missing password")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Missing password
2024-11-06 18:33:51.604 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Missing password
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001CF3C994860>
    └ <WorkerThread(AnyIO worker thread, started 23792)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001CF4222C2C0>
    └ <WorkerThread(AnyIO worker thread, started 23792)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001CF42182200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001CF421D35C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001CF42239350>
           │             └ <function update_user at 0x000001CF40E3EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 83, in update_user
    user_validator.validate_password(data.new_password)
    │              │                 │    └ None
    │              │                 └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', password='Password1234$', new_password=N...
    │              └ <function validate_password at 0x000001CF40E3E200>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_validator.py", line 66, in validate_password
    raise shared_validator.ValidationException("Missing password")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Missing password
2024-11-06 18:35:51.007 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 'UserUpdatePassword' object has no attribute 'password'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001E40D6B4860>
    └ <WorkerThread(AnyIO worker thread, started 27188)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001E412E7C2C0>
    └ <WorkerThread(AnyIO worker thread, started 27188)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001E412DD2200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001E411ABE780>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001E412E23890>
           │             └ <function update_user at 0x000001E411A8EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 73, in update_user
    shared_validator.validate_sql_malicious_input(username, data.email, data.new_email, data.password, data.new_password)
    │                │                            │         │    │      │    │          │              │    └ None
    │                │                            │         │    │      │    │          │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
    │                │                            │         │    │      │    │          └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
    │                │                            │         │    │      │    └ 'firstUser18@gmail.com'
    │                │                            │         │    │      └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
    │                │                            │         │    └ 'firstUser19@gmail.com'
    │                │                            │         └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
    │                │                            └ 'First32'
    │                └ <function validate_sql_malicious_input at 0x000001E411A8DBC0>
    └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

AttributeError: 'UserUpdatePassword' object has no attribute 'password'
2024-11-06 18:44:10.884 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 'UserUpdatePassword' object has no attribute 'password'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000023840794860>
    └ <WorkerThread(AnyIO worker thread, started 24752)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000023845CFC2C0>
    └ <WorkerThread(AnyIO worker thread, started 24752)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000023845C56200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000023845C8BF80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000023845C77390>
           │             └ <function update_user at 0x0000023844C4EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 82, in update_user
    user_validator.validate_password(data.password)
    │              │                 └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
    │              └ <function validate_password at 0x0000023844C4E200>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

AttributeError: 'UserUpdatePassword' object has no attribute 'password'
2024-11-06 18:44:35.585 | ERROR    | app.services.user_service:update_user:110 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Missing password
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000176D04D4860>
    └ <WorkerThread(AnyIO worker thread, started 21408)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000176D5A3C2C0>
    └ <WorkerThread(AnyIO worker thread, started 21408)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x00000176D599A200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000176D5A42F00>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000176D59E7B10>
           │             └ <function update_user at 0x00000176D498EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 83, in update_user
    user_validator.validate_password(data.new_password)
    │              │                 │    └ None
    │              │                 └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
    │              └ <function validate_password at 0x00000176D498E200>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_validator.py", line 66, in validate_password
    raise shared_validator.ValidationException("Missing password")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Missing password
2024-11-06 18:45:42.719 | ERROR    | app.services.user_service:update_user:111 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 404: User not found
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001E848A14860>
    └ <WorkerThread(AnyIO worker thread, started 17424)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001E84DF3C2C0>
    └ <WorkerThread(AnyIO worker thread, started 17424)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001E84DE96200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001E84DEB7640>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser19@gmail.com', new_email='firstUser18@gmail.com', old_password='Password1234$', new_passwo...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001E84DEE78D0>
           │             └ <function update_user at 0x000001E84CE8EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 100, in update_user
    raise HTTPException(status_code=404, detail="User not found")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 404: User not found
2024-11-06 18:47:09.256 | ERROR    | app.services.user_service:update_user:111 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: update() got an unexpected keyword argument 'user_id'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001E848A14860>
    └ <WorkerThread(AnyIO worker thread, started 17424)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001E84DF3C2C0>
    └ <WorkerThread(AnyIO worker thread, started 17424)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001E84DE96200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001E84DEBDB40>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001E84E35E3D0>
           │             └ <function update_user at 0x000001E84CE8EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 103, in update_user
    user_crud.update(db=db, user_id=db_user.user_id, new_password=data.new_password, new_email=data.new_email)
    │         │         │           │       │                     │    │                       │    └ 'firstUser32@gmail.com'
    │         │         │           │       │                     │    │                       └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
    │         │         │           │       │                     │    └ None
    │         │         │           │       │                     └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
    │         │         │           │       └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000001E84CD47600>
    │         │         │           └ <app.models.database.User object at 0x000001E84E3D6A10>
    │         │         └ <sqlalchemy.orm.session.Session object at 0x000001E84E35E3D0>
    │         └ <function update at 0x000001E84CE8E700>
    └ <module 'app.crud.user_crud' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\crud\\user_cru...

TypeError: update() got an unexpected keyword argument 'user_id'
2024-11-06 19:32:21.667 | ERROR    | app.crud.user_crud:update:125 - Exception with usr_id=51, new_email=firstUser32@gmail.com: get_by_username_email_id() missing 1 required positional argument: 'db'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000021E00734860>
    └ <WorkerThread(AnyIO worker thread, started 5888)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000021E05C682C0>
    └ <WorkerThread(AnyIO worker thread, started 5888)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000021E05BCA200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000021E05C05F40>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000021E05C17890>
           │             └ <function update_user at 0x0000021E04BBEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 103, in update_user
    user_crud.update(db=db, usr_id=db_user.user_id, new_password=data.new_password, new_email=data.new_email)
    │         │         │          │       │                     │    │                       │    └ 'firstUser32@gmail.com'
    │         │         │          │       │                     │    │                       └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
    │         │         │          │       │                     │    └ None
    │         │         │          │       │                     └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
    │         │         │          │       └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x0000021E04A77600>
    │         │         │          └ <app.models.database.User object at 0x0000021E05BC7790>
    │         │         └ <sqlalchemy.orm.session.Session object at 0x0000021E05C17890>
    │         └ <function update at 0x0000021E04BBE700>
    └ <module 'app.crud.user_crud' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\crud\\user_cru...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\crud\user_crud.py", line 100, in update
    db_existing_user = get_by_username_email_id(user_id=usr_id)
                       │                                └ 51
                       └ <function get_by_username_email_id at 0x0000021E04BBE520>

TypeError: get_by_username_email_id() missing 1 required positional argument: 'db'
2024-11-06 19:32:21.719 | ERROR    | app.services.user_service:update_user:111 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 500: An unexpected error occurred
Traceback (most recent call last):

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\crud\user_crud.py", line 100, in update
    db_existing_user = get_by_username_email_id(user_id=usr_id)
                       │                                └ 51
                       └ <function get_by_username_email_id at 0x0000021E04BBE520>

TypeError: get_by_username_email_id() missing 1 required positional argument: 'db'


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000021E00734860>
    └ <WorkerThread(AnyIO worker thread, started 5888)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000021E05C682C0>
    └ <WorkerThread(AnyIO worker thread, started 5888)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000021E05BCA200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000021E05C05F40>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000021E05C17890>
           │             └ <function update_user at 0x0000021E04BBEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 103, in update_user
    user_crud.update(db=db, usr_id=db_user.user_id, new_password=data.new_password, new_email=data.new_email)
    │         │         │          │       │                     │    │                       │    └ 'firstUser32@gmail.com'
    │         │         │          │       │                     │    │                       └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
    │         │         │          │       │                     │    └ None
    │         │         │          │       │                     └ UserUpdatePassword(email='2@gmail.com', new_email='firstUser32@gmail.com', old_password='Password1234$', new_password=None)
    │         │         │          │       └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x0000021E04A77600>
    │         │         │          └ <app.models.database.User object at 0x0000021E05BC7790>
    │         │         └ <sqlalchemy.orm.session.Session object at 0x0000021E05C17890>
    │         └ <function update at 0x0000021E04BBE700>
    └ <module 'app.crud.user_crud' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\crud\\user_cru...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\crud\user_crud.py", line 127, in update
    raise HTTPException(status_code=500, detail="An unexpected error occurred")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 500: An unexpected error occurred
2024-11-06 20:08:23.305 | ERROR    | app.services.user_service:update_user:111 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Missing email
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000022F17FA4860>
    └ <WorkerThread(AnyIO worker thread, started 29068)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000022F1D4382C0>
    └ <WorkerThread(AnyIO worker thread, started 29068)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000022F1C3BE2A0>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000022F1D3CBB00>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password1234$', new_password='Password123#')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000022F1D3E37D0>
           │             └ <function update_user at 0x0000022F1C38EC00>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 81, in update_user
    user_validator.validate_email(data.new_email)
    │              │              │    └ None
    │              │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password1234$', new_password='Password123#')
    │              └ <function validate_email at 0x0000022F1C38E160>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_validator.py", line 57, in validate_email
    raise shared_validator.ValidationException("Missing email")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Missing email
2024-11-06 22:59:47.931 | ERROR    | app.services.user_service:update_user:111 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Missing email
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000260330C4860>
    └ <WorkerThread(AnyIO worker thread, started 31932)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002603862C360>
    └ <WorkerThread(AnyIO worker thread, started 31932)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000002603757A2A0>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000260385B9340>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password1234$', new_password='Password123#')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000026038563A10>
           │             └ <function update_user at 0x000002603754EC00>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 81, in update_user
    user_validator.validate_email(data.new_email)
    │              │              │    └ None
    │              │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password1234$', new_password='Password123#')
    │              └ <function validate_email at 0x000002603754E160>
    └ <module 'app.validators.user_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\val...

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\validators\user_validator.py", line 57, in validate_email
    raise shared_validator.ValidationException("Missing email")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Missing email
2024-11-06 23:08:26.532 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 400: No new_email or new_password provided
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000152CD3F4860>
    └ <WorkerThread(AnyIO worker thread, started 7028)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000152D29582C0>
    └ <WorkerThread(AnyIO worker thread, started 7028)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x00000152D28BA200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000152D28D77C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password1234$', new_password=None)
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000152D28EBA10>
           │             └ <function update_user at 0x00000152D18AEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 77, in update_user
    raise HTTPException(status_code=400, detail="No new_email or new_password provided")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 400: No new_email or new_password provided
2024-11-06 23:08:44.794 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 404: User not found
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000152CD3F4860>
    └ <WorkerThread(AnyIO worker thread, started 7028)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000152D29582C0>
    └ <WorkerThread(AnyIO worker thread, started 7028)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x00000152D28BA200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000152D2E06D00>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password1234#', new_password='Password1234$')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000152CFB87110>
           │             └ <function update_user at 0x00000152D18AEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 102, in update_user
    raise HTTPException(status_code=404, detail="User not found")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 404: User not found
2024-11-06 23:10:47.205 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 404: User not found
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x00000152CD3F4860>
    └ <WorkerThread(AnyIO worker thread, started 7028)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x00000152D29582C0>
    └ <WorkerThread(AnyIO worker thread, started 7028)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x00000152D28BA200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x00000152D2E05380>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', new_email=None, old_password='Password123#', new_password='Password1234$')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x00000152D28D4AD0>
           │             └ <function update_user at 0x00000152D18AEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 102, in update_user
    raise HTTPException(status_code=404, detail="User not found")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 404: User not found
2024-11-06 23:13:06.509 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 400: No new_email or new_password provided
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000020666184860>
    └ <WorkerThread(AnyIO worker thread, started 13780)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002066B6682C0>
    └ <WorkerThread(AnyIO worker thread, started 13780)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000002066B5C6200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002066B5D2F80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password=None)
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002066B677BD0>
           │             └ <function update_user at 0x000002066A5BEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 77, in update_user
    raise HTTPException(status_code=400, detail="No new_email or new_password provided")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 400: No new_email or new_password provided
2024-11-06 23:13:26.042 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 'UserUpdatePassword' object has no attribute 'old_password'
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000020666184860>
    └ <WorkerThread(AnyIO worker thread, started 13780)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000002066B6682C0>
    └ <WorkerThread(AnyIO worker thread, started 13780)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000002066B5C6200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000002066A5EF900>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Pass$W5s')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000002066B67C390>
           │             └ <function update_user at 0x000002066A5BEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 88, in update_user
    if data.old_password == data.new_password:
       │                    │    └ 'Pass$W5s'
       │                    └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Pass$W5s')
       └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Pass$W5s')

AttributeError: 'UserUpdatePassword' object has no attribute 'old_password'
2024-11-06 23:14:28.167 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 400: Old and new passwords must be different
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001D1765E4860>
    └ <WorkerThread(AnyIO worker thread, started 30764)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001D17BA68220>
    └ <WorkerThread(AnyIO worker thread, started 30764)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001D17B9C6200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001D17A9DEB80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Password1234$')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001D17B9D0090>
           │             └ <function update_user at 0x000001D17A9BEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 90, in update_user
    raise HTTPException(status_code=400, detail="Old and new passwords must be different")
          └ <class 'fastapi.exceptions.HTTPException'>

fastapi.exceptions.HTTPException: 400: Old and new passwords must be different
2024-11-06 23:18:14.433 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: 'Old and new passwords must be different' is not a valid HTTPStatus
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x000001BE5AF84860>
    └ <WorkerThread(AnyIO worker thread, started 22312)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x000001BE604AC2C0>
    └ <WorkerThread(AnyIO worker thread, started 22312)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x000001BE60406200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x000001BE604B6C00>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Password1234$')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x000001BE60426010>
           │             └ <function update_user at 0x000001BE5F3FEA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 90, in update_user
    raise shared_validator.HTTPException("Old and new passwords must be different")
          │                └ <class 'fastapi.exceptions.HTTPException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\fastapi\exceptions.py", line 65, in __init__
    super().__init__(status_code=status_code, detail=detail, headers=headers)
                                 │                   │               └ None
                                 │                   └ None
                                 └ 'Old and new passwords must be different'
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\starlette\exceptions.py", line 18, in __init__
    detail = http.HTTPStatus(status_code).phrase
             │    │          └ 'Old and new passwords must be different'
             │    └ <enum 'HTTPStatus'>
             └ <module 'http' from 'C:\\Users\\tomas\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\http\\__init__.py'>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\enum.py", line 714, in __call__
    return cls.__new__(cls, value)
           │   │       │    └ 'Old and new passwords must be different'
           │   │       └ <enum 'HTTPStatus'>
           │   └ <function Enum.__new__ at 0x000001BE5AFA0400>
           └ <enum 'HTTPStatus'>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\enum.py", line 1137, in __new__
    raise ve_exc
          └ None

ValueError: 'Old and new passwords must be different' is not a valid HTTPStatus
2024-11-06 23:19:16.347 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Old and new passwords must be different
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000016271384860>
    └ <WorkerThread(AnyIO worker thread, started 29436)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000016276C082C0>
    └ <WorkerThread(AnyIO worker thread, started 29436)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000016276B66200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000016276B72F80>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Password1234$')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000016276B9BA10>
           │             └ <function update_user at 0x000001627581EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 90, in update_user
    raise shared_validator.ValidationException("Old and new passwords must be different")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Old and new passwords must be different
2024-11-06 23:20:40.366 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Old and new passwords must be different
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000028B283C4860>
    └ <WorkerThread(AnyIO worker thread, started 29700)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000028B2D8DC2C0>
    └ <WorkerThread(AnyIO worker thread, started 29700)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000028B2D836200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000028B2AC972C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email=None, new_password='Password1234$')
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000028B2D8877D0>
           │             └ <function update_user at 0x0000028B2C82EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 90, in update_user
    raise shared_validator.ValidationException("Old and new passwords must be different")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Old and new passwords must be different
2024-11-06 23:20:56.077 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Old and new passwords must be different
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000028B283C4860>
    └ <WorkerThread(AnyIO worker thread, started 29700)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000028B2D8DC2C0>
    └ <WorkerThread(AnyIO worker thread, started 29700)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000028B2D836200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000028B2D887000>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email='firstUser32@gmail.com', new_password='...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000028B2D843A10>
           │             └ <function update_user at 0x0000028B2C82EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 90, in update_user
    raise shared_validator.ValidationException("Old and new passwords must be different")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Old and new passwords must be different
2024-11-06 23:20:59.987 | ERROR    | app.services.user_service:update_user:113 - 
USER ACCOUNT HAS NOT BEEN CHANGED, EXCEPTION OCCURED: Old and new email addresses must be different
Traceback (most recent call last):

  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1002, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x0000028B283C4860>
    └ <WorkerThread(AnyIO worker thread, started 29700)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
    │    └ <function WorkerThread.run at 0x0000028B2D8DC2C0>
    └ <WorkerThread(AnyIO worker thread, started 29700)>
  File "C:\Users\tomas\AppData\Local\Programs\Python\Python311\Lib\site-packages\anyio\_backends\_asyncio.py", line 914, in run
    result = context.run(func, *args)
             │       │   │      └ ()
             │       │   └ functools.partial(<function update_user_credentials at 0x0000028B2D836200>, db=<sqlalchemy.orm.session.Session object at 0x00...
             │       └ <method 'run' of '_contextvars.Context' objects>
             └ <_contextvars.Context object at 0x0000028B2DC906C0>

  File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\main.py", line 53, in update_user_credentials
    return user_services.update_user(db=db, username=username, data=data)
           │             │              │            │              └ UserUpdatePassword(email='firstUser32@gmail.com', password='Password1234$', new_email='firstUser32@gmail.com', new_password='...
           │             │              │            └ 'First32'
           │             │              └ <sqlalchemy.orm.session.Session object at 0x0000028B2D8E6B10>
           │             └ <function update_user at 0x0000028B2C82EA20>
           └ <module 'app.services.user_service' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\service...

> File "C:\Users\tomas\Documents\Saityno Progr. Projektavimas\StreamaBit\app\services\user_service.py", line 93, in update_user
    raise shared_validator.ValidationException("Old and new email addresses must be different")
          │                └ <class 'app.validators.shared_validator.ValidationException'>
          └ <module 'app.validators.shared_validator' from 'C:\\Users\\tomas\\Documents\\Saityno Progr. Projektavimas\\StreamaBit\\app\\v...

app.validators.shared_validator.ValidationException: Old and new email addresses must be different
